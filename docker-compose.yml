version: '3.9'

services:
  nginx:
    user: root
    restart: always
    container_name: ses_nginx
    image: nginx:1.21.6-alpine
    volumes:
      - ./nginx/config/:/etc/nginx/conf.d/
    ports:
      - "80:80"
    depends_on:
      - ses_pgadmin
      - ses_backend
    networks:
      - ses

  postgres:
    user: root
    container_name: ses_host
    image: postgres:14.3-alpine
    env_file:
      - .env
    volumes:
      - ./volumesData/postgresql:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    command: -p ${POSTGRES_PORT}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - ses

  pgadmin:
    user: root
    container_name: ses_pgadmin
    image: dpage/pgadmin4:6.10
    env_file:
      - .env
    volumes:
      - ./volumesData/pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT}:80"
    restart: unless-stopped
    depends_on:
      - postgres
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - ses

  backend:
    user: root
    container_name: ses_backend
    build: .
    command: bash -c "backend-init.sh"
    restart: always
    depends_on:
      - postgres
    env_file:
      - .env
    volumes:
      - "./volumesData/static:/app/dist/static"
    ports:
      - "${PORT}:${PORT}"
    networks:
      - ses

networks:
  ses:
    driver: bridge
